/*
! tailwindcss v3.4.6 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.top-1\/2 {
  top: 50%;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.mt-1 {
  margin-top: 0.25rem;
}

.box-border {
  box-sizing: border-box;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.hidden {
  display: none;
}

.h-\[32px\] {
  height: 32px;
}

.h-\[40px\] {
  height: 40px;
}

.h-\[48px\] {
  height: 48px;
}

.h-5 {
  height: 1.25rem;
}

.h-4 {
  height: 1rem;
}

.h-0 {
  height: 0px;
}

.w-full {
  width: 100%;
}

.w-5 {
  width: 1.25rem;
}

.w-4 {
  width: 1rem;
}

.w-0 {
  width: 0px;
}

.select-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.appearance-none {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.items-center {
  align-items: center;
}

.gap-2 {
  gap: 0.5rem;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-full {
  border-radius: 9999px;
}

.border {
  border-width: 1px;
}

.border-light-ui-border-color {
  border-color: var(--light-ui-border-color);
}

.border-light-negative-color {
  border-color: var(--light-negative-color);
}

.border-light-positive-color {
  border-color: var(--light-positive-color);
}

.bg-light-primary-color {
  background-color: var(--light-primary-color);
}

.bg-light-negative-color {
  background-color: var(--light-negative-color);
}

.bg-light-positive-color {
  background-color: var(--light-positive-color);
}

.bg-light-primary-background-color {
  background-color: var(--light-primary-background-color);
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.py-0\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}

.py-1\.5 {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-\[9px\] {
  padding-top: 9px;
  padding-bottom: 9px;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-\[13px\] {
  padding-top: 13px;
  padding-bottom: 13px;
}

.px-\[7px\] {
  padding-left: 7px;
  padding-right: 7px;
}

.py-\[1px\] {
  padding-top: 1px;
  padding-bottom: 1px;
}

.px-\[15px\] {
  padding-left: 15px;
  padding-right: 15px;
}

.px-\[23px\] {
  padding-left: 23px;
  padding-right: 23px;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.py-\[5px\] {
  padding-top: 5px;
  padding-bottom: 5px;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.text-text2 {
  font-size: 14px;
  line-height: 20px;
}

.text-text1 {
  font-size: 16px;
  line-height: 22px;
}

.text-light-text-color-on-primary {
  color: var(--light-text-color-on-primary);
}

.text-light-primary-color {
  color: var(--light-primary-color);
}

.text-light-negative-color {
  color: var(--light-negative-color);
}

.text-light-primary-text-color {
  color: var(--light-primary-text-color);
}

.text-light-positive-color {
  color: var(--light-positive-color);
}

.text-light-secondary-text-color {
  color: var(--light-secondary-text-color);
}

.text-light-disabled-text-color {
  color: var(--light-disabled-text-color);
}

.opacity-0 {
  opacity: 0;
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.outline {
  outline-style: solid;
}

.outline-offset-8 {
  outline-offset: 8px;
}

.placeholder\:text-light-secondary-text-color::-moz-placeholder {
  color: var(--light-secondary-text-color);
}

.placeholder\:text-light-secondary-text-color::placeholder {
  color: var(--light-secondary-text-color);
}

.before\:visible::before {
  content: var(--tw-content);
  visibility: visible;
}

.before\:absolute::before {
  content: var(--tw-content);
  position: absolute;
}

.before\:h-4::before {
  content: var(--tw-content);
  height: 1rem;
}

.before\:w-4::before {
  content: var(--tw-content);
  width: 1rem;
}

.before\:rounded::before {
  content: var(--tw-content);
  border-radius: 0.25rem;
}

.before\:rounded-sm::before {
  content: var(--tw-content);
  border-radius: 0.125rem;
}

.before\:border::before {
  content: var(--tw-content);
  border-width: 1px;
}

.before\:border-light-ui-border-color::before {
  content: var(--tw-content);
  border-color: var(--light-ui-border-color);
}

.before\:bg-red::before {
  content: var(--tw-content);
  background-color: var(--red);
}

.after\:absolute::after {
  content: var(--tw-content);
  position: absolute;
}

.after\:top-1\/2::after {
  content: var(--tw-content);
  top: 50%;
}

.after\:left-1\/2::after {
  content: var(--tw-content);
  left: 50%;
}

.after\:-left-1\/2::after {
  content: var(--tw-content);
  left: -50%;
}

.after\:left-0::after {
  content: var(--tw-content);
  left: 0px;
}

.after\:top-0::after {
  content: var(--tw-content);
  top: 0px;
}

.after\:left-\[3px\]::after {
  content: var(--tw-content);
  left: 3px;
}

.after\:top-\[3px\]::after {
  content: var(--tw-content);
  top: 3px;
}

.after\:top-\[8px\]::after {
  content: var(--tw-content);
  top: 8px;
}

.after\:top-\[7px\]::after {
  content: var(--tw-content);
  top: 7px;
}

.after\:top-2::after {
  content: var(--tw-content);
  top: 0.5rem;
}

.after\:left-\[2px\]::after {
  content: var(--tw-content);
  left: 2px;
}

.after\:h-3::after {
  content: var(--tw-content);
  height: 0.75rem;
}

.after\:h-2::after {
  content: var(--tw-content);
  height: 0.5rem;
}

.after\:h-\[6px\]::after {
  content: var(--tw-content);
  height: 6px;
}

.after\:w-3::after {
  content: var(--tw-content);
  width: 0.75rem;
}

.after\:w-2::after {
  content: var(--tw-content);
  width: 0.5rem;
}

.after\:w-\[10px\]::after {
  content: var(--tw-content);
  width: 10px;
}

.after\:w-2\.5::after {
  content: var(--tw-content);
  width: 0.625rem;
}

.after\:-translate-x-1\/2::after {
  content: var(--tw-content);
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.after\:-translate-y-1\/2::after {
  content: var(--tw-content);
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.after\:rotate-90::after {
  content: var(--tw-content);
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.after\:rotate-45::after {
  content: var(--tw-content);
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.after\:-rotate-45::after {
  content: var(--tw-content);
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.after\:rounded-full::after {
  content: var(--tw-content);
  border-radius: 9999px;
}

.after\:border-l::after {
  content: var(--tw-content);
  border-left-width: 1px;
}

.after\:border-r::after {
  content: var(--tw-content);
  border-right-width: 1px;
}

.after\:border-b::after {
  content: var(--tw-content);
  border-bottom-width: 1px;
}

.after\:border-light-primary-background-color::after {
  content: var(--tw-content);
  border-color: var(--light-primary-background-color);
}

.after\:bg-red::after {
  content: var(--tw-content);
  background-color: var(--red);
}

.after\:bg-light-primary-background-color::after {
  content: var(--tw-content);
  background-color: var(--light-primary-background-color);
}

.after\:opacity-0::after {
  content: var(--tw-content);
  opacity: 0;
}

.checked\:border-light-primary-color:checked {
  border-color: var(--light-primary-color);
}

.checked\:bg-light-primary-color:checked {
  background-color: var(--light-primary-color);
}

.checked\:outline:checked {
  outline-style: solid;
}

.checked\:outline-4:checked {
  outline-width: 4px;
}

.checked\:outline-2:checked {
  outline-width: 2px;
}

.checked\:outline-8:checked {
  outline-width: 8px;
}

.checked\:outline-offset-8:checked {
  outline-offset: 8px;
}

.checked\:-outline-offset-8:checked {
  outline-offset: -8px;
}

.checked\:-outline-offset-2:checked {
  outline-offset: -2px;
}

.checked\:-outline-offset-4:checked {
  outline-offset: -4px;
}

.checked\:outline-light-primary-color:checked {
  outline-color: var(--light-primary-color);
}

.checked\:before\:border-light-primary-color:checked::before {
  content: var(--tw-content);
  border-color: var(--light-primary-color);
}

.checked\:before\:bg-light-primary-color:checked::before {
  content: var(--tw-content);
  background-color: var(--light-primary-color);
}

.checked\:after\:left-\[3px\]:checked::after {
  content: var(--tw-content);
  left: 3px;
}

.checked\:after\:top-\[3px\]:checked::after {
  content: var(--tw-content);
  top: 3px;
}

.checked\:after\:h-\[6px\]:checked::after {
  content: var(--tw-content);
  height: 6px;
}

.checked\:after\:w-\[10px\]:checked::after {
  content: var(--tw-content);
  width: 10px;
}

.checked\:after\:-rotate-45:checked::after {
  content: var(--tw-content);
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.checked\:after\:border-b:checked::after {
  content: var(--tw-content);
  border-bottom-width: 1px;
}

.checked\:after\:border-l:checked::after {
  content: var(--tw-content);
  border-left-width: 1px;
}

.checked\:after\:opacity-100:checked::after {
  content: var(--tw-content);
  opacity: 1;
}

.indeterminate\:before\:border-light-primary-color:indeterminate::before {
  content: var(--tw-content);
  border-color: var(--light-primary-color);
}

.indeterminate\:before\:bg-light-primary-color:indeterminate::before {
  content: var(--tw-content);
  background-color: var(--light-primary-color);
}

.indeterminate\:after\:opacity-100:indeterminate::after {
  content: var(--tw-content);
  opacity: 1;
}

.hover\:border-light-primary-text-color:hover {
  border-color: var(--light-primary-text-color);
}

.hover\:border-light-negative-color:hover {
  border-color: var(--light-negative-color);
}

.hover\:border-light-positive-color:hover {
  border-color: var(--light-positive-color);
}

.hover\:border-light-inverted-color-background:hover {
  border-color: var(--light-inverted-color-background);
}

.hover\:bg-light-primary-hover-color:hover {
  background-color: var(--light-primary-hover-color);
}

.hover\:bg-light-negative-color-hover:hover {
  background-color: var(--light-negative-color-hover);
}

.hover\:bg-light-positive-color-hover:hover {
  background-color: var(--light-positive-color-hover);
}

.hover\:bg-light-primary-background-hover-color:hover {
  background-color: var(--light-primary-background-hover-color);
}

.hover\:bg-light-negative-color-selected:hover {
  background-color: var(--light-negative-color-selected);
}

.hover\:bg-light-positive-color-selected:hover {
  background-color: var(--light-positive-color-selected);
}

.before\:hover\:border-light-inverted-color-background:hover::before {
  content: var(--tw-content);
  border-color: var(--light-inverted-color-background);
}

.hover\:before\:border-light-inverted-color-background:hover::before {
  content: var(--tw-content);
  border-color: var(--light-inverted-color-background);
}

.checked\:hover\:border-light-primary-color:hover:checked {
  border-color: var(--light-primary-color);
}

.checked\:hover\:before\:border-light-primary-hover-color:hover:checked::before {
  content: var(--tw-content);
  border-color: var(--light-primary-hover-color);
}

.checked\:hover\:before\:bg-light-primary-hover-color:hover:checked::before {
  content: var(--tw-content);
  background-color: var(--light-primary-hover-color);
}

.indeterminate\:hover\:before\:border-light-primary-hover-color:hover:indeterminate::before {
  content: var(--tw-content);
  border-color: var(--light-primary-hover-color);
}

.indeterminate\:hover\:before\:bg-light-primary-hover-color:hover:indeterminate::before {
  content: var(--tw-content);
  background-color: var(--light-primary-hover-color);
}

.focus\:border-light-primary-color:focus {
  border-color: var(--light-primary-color);
}

.focus\:border-light-negative-color:focus {
  border-color: var(--light-negative-color);
}

.focus\:border-light-positive-color:focus {
  border-color: var(--light-positive-color);
}

.focus\:bg-light-primary-hover-color:focus {
  background-color: var(--light-primary-hover-color);
}

.active\:border-light-primary-color:active {
  border-color: var(--light-primary-color);
}

.active\:bg-light-primary-hover-color:active {
  background-color: var(--light-primary-hover-color);
}

.active\:bg-light-negative-color-hover:active {
  background-color: var(--light-negative-color-hover);
}

.active\:bg-light-positive-color-hover:active {
  background-color: var(--light-positive-color-hover);
}

.active\:bg-light-primary-background-hover-color:active {
  background-color: var(--light-primary-background-hover-color);
}

.active\:bg-light-primary-selected-color:active {
  background-color: var(--light-primary-selected-color);
}

.active\:bg-light-negative-color-selected:active {
  background-color: var(--light-negative-color-selected);
}

.active\:bg-light-positive-color-selected:active {
  background-color: var(--light-positive-color-selected);
}

.disabled\:border-light-disabled-text-color:disabled {
  border-color: var(--light-disabled-text-color);
}

.disabled\:border-light-disabled-background-color:disabled {
  border-color: var(--light-disabled-background-color);
}

.disabled\:bg-light-disabled-background-color:disabled {
  background-color: var(--light-disabled-background-color);
}

.disabled\:bg-light-primary-background-hover-color:disabled {
  background-color: var(--light-primary-background-hover-color);
}

.disabled\:text-light-disabled-text-color:disabled {
  color: var(--light-disabled-text-color);
}

.disabled\:text-light-primary-color:disabled {
  color: var(--light-primary-color);
}

.disabled\:text-light-negative-color:disabled {
  color: var(--light-negative-color);
}

.disabled\:text-light-primary-text-color:disabled {
  color: var(--light-primary-text-color);
}

.disabled\:text-light-positive-color:disabled {
  color: var(--light-positive-color);
}

.disabled\:opacity-50:disabled {
  opacity: 0.5;
}

.disabled\:before\:border-light-ui-border-color:disabled::before {
  content: var(--tw-content);
  border-color: var(--light-ui-border-color);
}

.disabled\:before\:bg-light-disabled-background-color:disabled::before {
  content: var(--tw-content);
  background-color: var(--light-disabled-background-color);
}

.disabled\:after\:border-light-disabled-text-color:disabled::after {
  content: var(--tw-content);
  border-color: var(--light-disabled-text-color);
}

.checked\:disabled\:before\:border-light-ui-border-color:disabled:checked::before {
  content: var(--tw-content);
  border-color: var(--light-ui-border-color);
}

.checked\:disabled\:before\:bg-light-disabled-background-color:disabled:checked::before {
  content: var(--tw-content);
  background-color: var(--light-disabled-background-color);
}

.disabled\:checked\:after\:bg-light-disabled-text-color:checked:disabled::after {
  content: var(--tw-content);
  background-color: var(--light-disabled-text-color);
}

.indeterminate\:disabled\:before\:border-light-ui-border-color:disabled:indeterminate::before {
  content: var(--tw-content);
  border-color: var(--light-ui-border-color);
}

.indeterminate\:disabled\:before\:bg-light-disabled-background-color:disabled:indeterminate::before {
  content: var(--tw-content);
  background-color: var(--light-disabled-background-color);
}

.disabled\:checked\:hover\:border-light-disabled-background-color:hover:checked:disabled {
  border-color: var(--light-disabled-background-color);
}

.peer:invalid ~ .peer-invalid\:text-light-negative-color {
  color: var(--light-negative-color);
}

.peer:focus ~ .peer-focus\:border-light-primary-color {
  border-color: var(--light-primary-color);
}

.peer:disabled ~ .peer-disabled\:text-light-disabled-text-color {
  color: var(--light-disabled-text-color);
}

.has-\[\&\>input\:focus\]\:border-light-primary-color:has(.has-\[\&\>input\:focus\]\:border-light-primary-color>input:focus) {
  border-color: var(--light-primary-color);
}

.has-\[input\:focus\]\:border-light-primary-color:has(input:focus) {
  border-color: var(--light-primary-color);
}

.has-\[input\:focus\]\:border-light-negative-color:has(input:focus) {
  border-color: var(--light-negative-color);
}

.has-\[input\:focus\]\:border-light-positive-color:has(input:focus) {
  border-color: var(--light-positive-color);
}

.peer:has(aria-invalid) ~ .peer-has-\[aria-invalid\]\:text-light-negative-color {
  color: var(--light-negative-color);
}

.peer:has('aria-invalid') ~ .peer-has-\[\'aria-invalid\'\]\:text-light-negative-color {
  color: var(--light-negative-color);
}

.peer:has(aria-invalid===true) ~ .peer-has-\[aria-invalid\=\=\=true\]\:text-light-negative-color {
  color: var(--light-negative-color);
}

.peer:has(aria-invalid="true") ~ .peer-has-\[aria-invalid\=\"true\"\]\:text-light-negative-color {
  color: var(--light-negative-color);
}

.peer:has(aria-invalid='true') ~ .peer-has-\[aria-invalid\=\'true\'\]\:text-light-negative-color {
  color: var(--light-negative-color);
}

.\[\&\>input\]\:flex-1>input {
  flex: 1 1 0%;
}

.\[\&\>input\]\:outline-none>input {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.\[\&\>input\]\:placeholder\:text-light-secondary-text-color>input::-moz-placeholder {
  color: var(--light-secondary-text-color);
}

.\[\&\>input\]\:placeholder\:text-light-secondary-text-color>input::placeholder {
  color: var(--light-secondary-text-color);
}